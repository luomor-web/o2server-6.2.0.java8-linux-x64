MWF.xDesktop.requireApp("process.TaskCenter","TaskCompletedList",null,!1),MWF.xApplication.process.TaskCenter.ReadList=new Class({Extends:MWF.xApplication.process.TaskCenter.TaskCompletedList,_getCurrentPageData:function(t,e){this.app.getAction(function(){if(this.filterData){this.filterListNode.empty();var i={};Object.each(this.filterData,function(t,e){"key"!=e?t&&(i[this.app.options.filterMap[e]]||(i[this.app.options.filterMap[e]]=[]),i[this.app.options.filterMap[e]].push(t.value),this.createFilterItemNode(e,t)):i.key=t}.bind(this)),this.filterData.key&&this.createFilterItemNode("key",{name:this.filterData.key});var o=this.items.length?this.items[this.items.length-1].data.id:"(0)";this.app.action.listReadFilter((function(e){t&&t(e)}),null,o,e||this.pageCount,i)}else{o=this.items.length?this.items[this.items.length-1].data.id:"(0)";this.app.action.listReadNext((function(e){t&&t(e)}),null,o,e||this.pageCount)}}.bind(this))},_getApplicationCount:function(t){this.app.getAction(function(){this.app.action.listReadApplication(function(e){t&&t(e)}.bind(this))}.bind(this))},_createItem:function(t){return new MWF.xApplication.process.TaskCenter.ReadList.Item(t,this)},_getFilterCount:function(t){this.app.action.listReadFilterCount((function(e){t&&t(e)}))}}),MWF.xApplication.process.TaskCenter.ReadList.Item=new Class({Extends:MWF.xApplication.process.TaskCenter.TaskCompletedList.Item,setFlowChart:function(t){var e=0;return t.workLogTokenList={},t.workLogList.each(function(i){t.workLogTokenList[i.fromActivityToken]=i,i.taskCompletedList||(i.taskCompletedList=[]),i.taskList||(i.taskList=[]),(i.taskCompletedList.length||i.taskList.length)&&(this.createFlowInforWorklogNode(i.fromActivityName,i.taskCompletedList,i.taskList||[],e,i.fromActivityToken==t.read.activityToken),e++)}.bind(this)),e},_getSimpleJobByTaskComplete:function(t){this.list.app.action.getSimpleJobByRead(function(e){t&&t(e.data)}.bind(this),null,this.data.id)},loadActions:function(){this.showTaskCompletedNode=new Element("div",{styles:this.list.css.titleActionReadedNode,title:this.list.app.lp.setReaded}).inject(this.actionContentNode),this.closeTaskCompletedNode=new Element("div",{styles:this.list.css.titleActionCloseNode}).inject(this.actionContentNode)},setEvent:function(){this.node.addEvents({mouseover:function(){this.showAction()}.bind(this),mouseout:function(){this.hideAction()}.bind(this)}),this.showTaskCompletedNode&&this.showTaskCompletedNode.addEvent("click",function(t){this.setReadedClose(t)}.bind(this)),this.closeTaskCompletedNode&&this.closeTaskCompletedNode.addEvent("click",function(t){this.closeTaskCompleted()}.bind(this)),this.rightContentNode&&this.rightContentNode.addEvent("click",function(t){this.showTaskCompleted(t)}.bind(this))},setEditTaskCompleledNodes:function(t){this.flowInforNode=new Element("div",{styles:this.list.css.flowInforNode}).inject(this.mainContentNode),this.workInforNode=new Element("div",{styles:this.list.css.workInforNode}).inject(this.mainContentNode),MWF.require("MWF.widget.ScrollBar",function(){new MWF.widget.ScrollBar(this.workInforNode,{style:"xApp_Task_infor",where:"before",distance:30,friction:4,axis:{x:!1,y:!0}})}.bind(this)),this.setFlowInfor(t),this.setWorkInfor(t),this.setReadedButton()},setReadedButton:function(){this.setReadedAction=Element("div",{styles:this.list.css.setReadedAction,text:this.list.app.lp.setReaded}).inject(this.mainContentNode),this.setReadedAction.addEvent("click",function(t){this.setReaded(t)}.bind(this))},setReadedClose:function(t){var e=this,i=this.list.app.lp.setReadedConfirmContent.replace("{title}",this.data.title);this.list.app.confirm("infor",t,this.list.app.lp.setReadedConfirmTitle,i,350,230,(function(){e.list.app.action.setReaded(function(){this.node.destroy(),this.list.refresh()}.bind(e),null,e.data.id,e.data),this.close()}),(function(){this.close()}),null,this.list.app.content)},setReaded:function(t){var e=this,i=this.list.app.lp.setReadedConfirmContent.replace("{title}",this.data.title);this.list.app.confirm("infor",t,this.list.app.lp.setReadedConfirmTitle,i,350,230,(function(){e.list.app.action.setReaded(function(){this.closeTaskCompleted(function(){this.node.destroy(),this.list.refresh()}.bind(this))}.bind(e),null,e.data.id,e.data),this.close()}),(function(){this.close()}),null,this.list.app.content)},openWorkByTaskCompleted:function(t,e){var i=this,o={workId:e,readonly:!0,appId:"process.Work"+e,onQueryLoadForm:function(){this.appForm.addEvent("afterReaded",(function(){i.node.destroy(),i.list.refresh()}))},onPostLoadForm:function(){}};this.list.app.desktop.openApplication(t,"process.Work",o)},openWorkCompleteedByTaskCompleted:function(t,e){var i=this,o={workCompletedId:e,readonly:!0,appId:"process.Work"+e,onQueryLoadForm:function(){this.appForm.addEvent("afterReaded",(function(){i.node.destroy(),i.list.refresh()}))},onPostLoadForm:function(){}};this.list.app.desktop.openApplication(t,"process.Work",o)},closeTaskCompleted:function(t){this.closeTaskCompletedNode.setStyle("display","none"),this.flowInforLeftNode.destroy(),this.flowInforRightNode.destroy(),this.flowInforContentNode.destroy(),this.flowInforScrollNode.destroy(),this.flowInforNode.destroy(),this.workInforNode.destroy(),this.setReadedAction.destroy(),this.flowInforScrollFx=null,this.flowInforLeftNode=null,this.flowInforRightNode=null,this.flowInforScrollNode=null,this.flowInforContentNode=null,this.flowInforNode=null,this.workInforNode=null,this.setReadedAction=null,delete this.flowInforScrollFx,delete this.flowInforLeftNode,delete this.flowInforRightNode,delete this.flowInforScrollNode,delete this.flowInforContentNode,delete this.flowInforNode,delete this.workInforNode,delete this.setReadedAction;var e=this.node.getPosition(this.list.app.content);this.list.css.itemNode_edit_from.top=e.y+"px",this.list.css.itemNode_edit_from.left=e.x+"px",new Fx.Morph(this.mainContentNode,{duration:200,transition:Fx.Transitions.Expo.easeIn,onComplete:function(){this.nodeClone.destroy(),this.nodeClone=null,this.list.app.content.unmask(),this.mainContentNode.setStyles(this.list.css.itemMainContentAreaNode),this.mainContentNode.setStyle("opacity",1),document.body.setStyle("-webkit-overflow-scrolling","touch"),this.list.app.removeEvent("resize",this.resizeEditNodeFun),this.showTaskCompletedNode.setStyle("display","block"),t&&t()}.bind(this)}).start(this.list.css.itemNode_edit_from)}});