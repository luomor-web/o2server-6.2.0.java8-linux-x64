MWF.xApplication.query.QueryExplorer.Importer=new Class({Extends:MWF.widget.Common,Implements:[Options,Events],options:{style:"default"},initialize:function(t,i,e){this.setOptions(e),this.app=t,this.container=this.app.content,this.actions=this.app.restActions,this.event=i,this.path="../x_component_query_QueryExplorer/$Importer/",this.cssPath="../x_component_query_QueryExplorer/$Importer/"+this.options.style+"/css.wcss",this._loadCss()},load:function(){this.container.mask({destroyOnHide:!0,style:{"background-color":"#666",opacity:.6}}),this.node=new Element("div",{styles:this.css.content}),this.titleNode=new Element("div",{styles:this.css.titleNode,text:this.app.lp.application.import}).inject(this.node),this.contentNode=new Element("div",{styles:this.css.contentNode}).inject(this.node),this.buttonAreaNode=new Element("div",{styles:this.css.buttonAreaNode}).inject(this.node),this.cancelButton=new Element("div",{styles:this.css.button,text:this.app.lp.application.export_cancel}).inject(this.buttonAreaNode),this.okButton=new Element("div",{styles:this.css.okButton,text:this.app.lp.application.export_ok}).inject(this.buttonAreaNode),this.loadContent(),this.setEvent(),this.node.inject(this.container),this.node.position({relativeTo:this.container,position:"center",edge:"center"})},loadContent:function(){this.textarea=new Element("textarea",{styles:this.css.textarea}).inject(this.contentNode)},setEvent:function(){this.cancelButton.addEvent("click",function(t){this.close()}.bind(this)),this.okButton.addEvent("click",function(t){this.importApplication()}.bind(this))},close:function(){this.container.unmask(),this.node.destroy(),this.cancelButton=null,this.okButton=null,this.buttonAreaNode=null,this.contentNode=null,this.titleNode=null,this.node=null,this.fireEvent("close")},importApplication:function(){var t=this.textarea.get("value");if(t){this.applicationJson=JSON.decode(t);var i=this.applicationJson.application.name;this.actions.listApplicationSummary("",function(t){var e="create",s=null;if(t.data)for(var o=0;o<t.data.length;o++)if(t.data[o].name==i){s=t.data[o],e="overwrite";break}if("overwrite"==e){var n=this;this.app.confirm("infor",this.event,this.app.lp.application.import_confirm_title,this.app.lp.application.import_confirm,400,180,(function(){n.doImportOverwriteApplication(s),this.close()}),(function(){this.close()}))}else this.doImportApplication()}.bind(this))}},readyProrressBar:function(){this.createProgressBar(),this.status={count:this.applicationJson.viewList.length+this.applicationJson.statList.length+1,complete:0}},doImportApplication:function(){this.readyProrressBar(),this.actions.action.invoke({name:"addApplication",data:this.applicationJson.application,success:function(){this.progressBarTextNode.set("text","Import Application Property ..."),this.checkExport(),this.importOverwriteViewList(),this.importOverwriteStatList()}.bind(this)})},doImportOverwriteApplication:function(t){this.readyProrressBar(),this.applicationJson.application.id=t.id,this.actions.saveApplication(this.applicationJson.application,function(){this.progressBarTextNode.set("text","Import Application Property ..."),this.checkExport()}.bind(this)),this.importOverwriteViewList(),this.importOverwriteStatList()},importOverwriteViewList:function(){this.actions.listView(this.applicationJson.application.id,function(t){var i=t.data||[];this.applicationJson.viewList.each(function(t){t.application=this.applicationJson.application.id;for(var e="",s=0;s<i.length;s++)if(i[s].name==t.name){e=i[s].id;break}var o=JSON.decode(t.data);t.data=o,e?(t.id=e,this.actions.updateView(t,function(){this.progressBarTextNode.set("text",'Import View "'+t.name+'" ...'),this.checkExport()}.bind(this))):this.actions.addView(t,function(){this.progressBarTextNode.set("text",'Import View "'+t.name+'" ...'),this.checkExport()}.bind(this))}.bind(this))}.bind(this))},importOverwriteStatList:function(){this.actions.listStat(this.applicationJson.application.id,function(t){var i=t.data||[];this.applicationJson.statList.each(function(t){t.application=this.applicationJson.application.id;for(var e="",s=0;s<i.length;s++)if(i[s].name==t.name){e=i[s].id;break}var o=JSON.decode(t.data);t.data=o,e?(t.id=e,this.actions.updateStat(t,function(){this.progressBarTextNode.set("text",'Import Stat "'+t.name+'" ...'),this.checkExport()}.bind(this))):this.actions.addStat(t,function(){this.progressBarTextNode.set("text",'Import Stat "'+t.name+'" ...'),this.checkExport()}.bind(this))}.bind(this))}.bind(this))},checkExport:function(){this.status.complete=this.status.complete+1;var t=this.status.complete/this.status.count*358;this.progressBarPercent.setStyle("width",t+"px"),this.status.complete==this.status.count&&(this.progressBarNode.destroy(),this.progressBarNode=null,this.progressBarTextNode=null,this.progressBar=null,this.progressBarPercent=null,this.close())},createProgressBar:function(){this.node.hide(),this.progressBarNode=new Element("div",{styles:this.css.progressBarNode}),this.progressBarNode.inject(this.container),this.progressBarNode.position({relativeTo:this.container,position:"center",edge:"center"}),this.progressBarTextNode=new Element("div",{styles:this.css.progressBarTextNode}).inject(this.progressBarNode),this.progressBar=new Element("div",{styles:this.css.progressBar}).inject(this.progressBarNode),this.progressBarPercent=new Element("div",{styles:this.css.progressBarPercent}).inject(this.progressBar)}});