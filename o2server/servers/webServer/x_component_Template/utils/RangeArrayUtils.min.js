window.RangeArrayUtils={complementary:function(t,e,n){if(!t)return t;var r=this.getRangeObject(t);if(!e||0==e.length)return this.parse([r],n);var s=this.union(e),a={};if(s[0][0]>r.start)a.start=r.start;else{if(!(r.end>s[0][1]))return[];a.start=s[0][1],s.shift()}for(var i=[];s.length>0;){if(s[0][0]>=r.end)return a.end=r.end,i.push(Object.clone(a)),this.parse(i,n);if(r.end<=s[0][1])return a.end=s[0][0],i.push(Object.clone(a)),this.parse(i,n);a.end=s[0][0],i.push(Object.clone(a)),a.start=s[0][1],s.shift()}return a.end=r.end,i.push(Object.clone(a)),this.parse(i,n)},union:function(t,e){if(!t||0==t.length)return t;for(var n=Array.clone(t),r=0;r<n.length;r++)n[r]=this.getRangeObject(n[r]);n.sort((function(t,e){return t.start-e.start}));for(var s=[],a=n.shift();n.length>0;){var i=n.shift();this.isIntersection(a,i)?a.end=Math.max(a.end,i.end):(s.push(Object.clone(a)),a=i)}return i?this.isIntersection(a,i)?(a.end=Math.max(a.end,i.end),s.push(Object.clone(a))):s.push(Object.clone(i)):s.push(Object.clone(a)),this.parse(s,e)},isIntersection:function(t,e){var n=typeOf("array"==t)?t:this.getRangeObject(t),r=typeOf("array"==e)?e:this.getRangeObject(e);return!(n.start>r.end)&&!(r.start>n.end)},parse:function(t,e){for(var n=[],r=0;r<t.length;r++){var s=t[r];e&&"date"==e?n.push([Date.parse(s.start),Date.parse(s.end)]):n.push([s.start,s.end])}return n},getRangeObject:function(t){return{start:Math.min(t[0],t[1]),end:Math.max(t[0],t[1])}}};